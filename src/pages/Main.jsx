import axios from 'axios';
import React, { useContext, useEffect, useState } from 'react';
import MovieCard from '../components/MovieCard';
import { AuthContext } from '../context/AuthContextProvider';



const API_KEY = "a9a90e58da935e5528540782b69aa0cf";
const FEATURED_API = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}`;
const SEARCH_API = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=`;

const Main = () => {
  const [movies, setMovies] = useState([]);
  //! Ã§ektiÄŸim veriyi bu state a atmak iÃ§in burada state olusturdum
  const [searchTerm, setSearchTerm] = useState("");
  //!ğŸ‘† bu statei search butonu iÃ§in oluÅŸturduk 
  const [loading, setloading] = useState(false)
  //!ğŸ‘† loading olustrmak iÃ§in loading state i olusturyoruz ve bu loading i nerede kullanacaksak orada cagÄ±rÄ±yoruz.
  const { currentUser } = useContext(AuthContext);


  useEffect(() => {
    getMovies(FEATURED_API);
  }, []);
  //! verimi Ã§ektimğŸ‘†


  const getMovies = (API) => {
    setloading(true)
    //!ğŸ‘† datayÄ± cekmeye baslamadan Ã¶nce benim loading im true olsun dedik.
    axios
      .get(API)
      .then((res) => setMovies(res.data.results))
      //! ğŸ‘†bu datamÄ± atrÄ±k ben setMovies Ä±mÄ±n iÃ§ine atabilirim.Ã§ektiÄŸim verimi ben deÄŸiÅŸkene ugrayan metoun iÃ§ine atÄ±yorum.
      //! ArtÄ±k bu atmÄ±ÅŸ oldugum setMoviesin iÃ§indeki datamÄ± kullanmak kalÄ±yor geriye.Bir HTML yapÄ±sÄ± iÃ§inde datayÄ± kullancaz
      .catch((err) => console.log(err))
      //! errorumu yakalamak iÃ§in catch i kulllanÄ±yorum 
      .finally(() => setloading(false));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (searchTerm && currentUser) {
      getMovies(SEARCH_API + searchTerm);
      setSearchTerm("");
    } else if (!currentUser) {
      alert("please log in to see details");
    } else {
      alert("please enter a text");
    }

    // Burada setSearchTerm u sÄ±fÄ±rladÄ±k ve setSearchTerm un da inputa baÄŸlÄ± olmasÄ± iÃ§in value ye baglamamÄ±z lazÄ±m
  };
  //! burada handleSubmit yaparak handle submitbutonuna baÄŸlÄ± yeniden getMovies verimizi Ã§ektik 


  return (
    <>
      <form className='flex justify-center p-2' onSubmit={handleSubmit}>
        {/*ğŸ‘†buradda onSubmit edince yeni bir data ceksin bana diye handleSubmit butonunu oluÅŸturduk */}
        <input type="search"
          className='w-80 h-8 rounded-md outline-none border p-1 m-2'
          placeholder='Search a movie...'
          onChange={(e) => setSearchTerm(e.target.value)}
          //!ğŸ‘† oluÅŸturmuÅŸ oldugum statei buraya onchange e attÄ±m. 
          value={searchTerm}
        // Burada value ye  searchTerm a baÄŸlÄ± veriyoruz .
        />
        <button className='text-white' type="submit">Search</button>
      </form>
      <div className='flex justify-center flex-wrap'>
        {/* âœ¨flex-wrap âœ¨  ile kÃ¼Ã§Ã¼ldÃ¼kÃ§e bÃ¼yÃ¼dÃ¼kce sayfa taÅŸmalarÄ± Ã¶nlemek iÃ§n koyduk  */}
        {loading ? (
          <div
            className="spinner-border animate-spin inline-block w-8 h-8 border-4 rounded-full text-blue-600 mt-52"
            role="status"
          >
            <span className="visually-hidden">Loading...</span>
          </div>
        ) : (
          movies.map((movie) => <MovieCard key={movie.id} {...movie} />)
        )}
        {/* buradan cekip mapladÄ±ÄŸÄ±m veriyi Ã§ektiÄŸim veriyi MovieCard Ä±ma bastÄ±m .ekrana basacagÄ±m veriyi aynÄ± sekilde basacagÄ±mdan ilk movies halinin alÄ±p basÄ±yorum */}
      </div>
    </>
  );
};

export default Main;





